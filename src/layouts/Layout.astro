---
import "@fontsource-variable/inter";
import "@fontsource/vidaloka";
import "@assets/styles/global.css";

import Header from "@ui/components/Header.astro";
import Footer from "@ui/components/Footer.astro";
import BackdropRadial from "@ui/components/BackdropRadial.astro";

export interface Props {
  title: string;
  description: string;
}
const { title, description } = Astro.props as Props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <script defer src="https://www.googletagmanager.com/gtag/js?id=G-7X79K0T33N"
    ></script>
    <script defer>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag("js", new Date());

      gtag("config", "G-7X79K0T33N");
    </script>
    <title>{title}</title>
  </head>
  <body class="relative font-inter">
    <Header />
    <main class="relative min-h-screen overflow-x-hidden">
      <BackdropRadial />
      <slot />
    </main>
    <Footer />
    <script>
      const noJs = document.querySelectorAll(".no-js");
      for (const el of noJs) {
        el.classList.remove("no-js");
      }

      const headingObserver = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          const target = entry.target as HTMLElement;
          if (entry.isIntersecting && !target.style.animation) {
            target.style.animation = "text-fade-in forwards .7s";
          }
        });
      });

      const paragraphsObserver = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          const target = entry.target as HTMLElement;
          if (entry.isIntersecting) {
            const paragraphs = target.querySelectorAll("p");
            for (let i = 0; i < paragraphs.length; i++) {
              const paragraph = paragraphs[i];
              if (paragraph) {
                paragraph.style.animation = `text-fade-in forwards .4s ${
                  i * 0.2 + 0.8
                }s`;
              }
            }
          }
        });
      });

      const headings = document.querySelectorAll(".text-heading");
      const paragraphSection = document.querySelectorAll(".p-fade");
      for (const heading of headings) {
        headingObserver.observe(heading);
      }

      for (const section of paragraphSection) {
        paragraphsObserver.observe(section);
      }
    </script>
  </body>
</html>
