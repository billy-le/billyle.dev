---
interface Props {
  post?: undefined | Record<string, any>;
  link?: string | undefined;
  height?: string;
  className?: string | undefined;
  position: number | undefined;
}
import { Image, Picture } from "astro:assets";
import SvgGrain from "./SvgGrain.astro";
import { twMerge } from "tailwind-merge";
import alligatorBalloons from "@assets/images/alligator_balloons.png";
import camera from "@assets/images/camera.png";
import dogFeeding from "@assets/images/dog_feeding.png";
import markerPin from "@assets/images/marker_pin.png";
import trainCommute from "@assets/images/train_commute.png";
import coding from "@assets/images/coding.png";
import type { ImageMetadata } from "astro";

const imageMap: Record<
  number,
  { src: ImageMetadata; alt: string; className: string }
> = {
  0: {
    src: alligatorBalloons,
    alt: "balloons attached to an alligator",
    className:
      "h-40 w-40 -top-32 -right-10 sm:top-20 xl:h-64 xl:w-64 xl:top-0 xl:-right-24",
  },
  1: {
    src: camera,
    alt: "camera",
    className:
      "h-20 w-20 -bottom-4 -left-4 xl:h-48 xl:w-48 xl:-bottom-10 xl:-left-20",
  },
  2: {
    src: dogFeeding,
    alt: "dog being fed",
    className:
      "h-28 w-28 -bottom-56 right-20 sm:bottom-auto sm:-top-20 xl:h-48 xl:w-48 xl:-top-[150px] xl:right-0",
  },
  4: {
    src: markerPin,
    alt: "a map of islands with a pin in the center",
    className:
      "h-32 w-32 sm:-bottom-10 sm:-right-8 xl:h-48 xl:w-48 xl:bottom-auto xl:top-[100px] xl:right-10",
  },
  5: {
    src: trainCommute,
    alt: "a boy looking at his phone while commuting on a train",
    className:
      "h-32 w-32 -bottom-4 left-1/2 -translate-x-1/2 xl:h-44 xl:w-44 xl:-bottom-14",
  },
  6: {
    src: coding,
    alt: "a person coding with 1's ans 0's on the screen",
    className:
      "h-32 w-32 top-1/2 -translate-y-1/2 -right-8 xl:h-56 xl:w-56 xl:top-auto xl:translate-y-0 xl:bottom-20 xl:-right-20",
  },
};

const blogCardMask: astroHTML.JSX.CSSProperties = {
  maskImage: `url("/images/blog-card-mask.svg")`,
  maskMode: "luminance",
  maskSize: "cover",
  maskComposite: "add",
};

const { className = "", post, height, link, position } = Astro.props;
const illustration = position != undefined ? imageMap[position] : undefined;
---

<div
  class={`${height} isolate relative rounded-lg border-2 border-slate-200 bg-slate-50 
              dark:bg-slate-600 dark:border-slate-950/10 dark:text-white
              after:content-[""] after:absolute after:top-0 after:left-0 after:h-full
              after:w-full after:bg-gradient-to-bl after:from-slate-200 dark:after:from-slate-900 after:-z-10 after:rounded-lg
              `}
>
  <SvgGrain className="absolute top-0 left-0 h-full w-full opacity-15" />
  <div class="absolute top-0 left-0 h-full w-full">
    {
      illustration && (
        <Image
          src={illustration["src"]}
          alt={illustration["alt"]}
          class={`pointer-events-none absolute ${illustration["className"]}`}
        />
      )
    }
  </div>
  {
    post ? (
      <div class={twMerge("relative h-full overflow-hidden", className)}>
        {post.image.url && (
          <Picture
            src={post.image.url}
            alt={post.image.alt}
            widths={[256]}
            sizes="256px"
            height={256}
            width={256}
            class="absolute h-full w-full object-cover -z-10 rounded-lg"
            style={blogCardMask}
          />
        )}
        <div class="p-5 h-full lg:p-10">
          <h3 class="text-lg font-semibold text-gray-600 max-w-xs line-clamp-2 lg:text-xl xl:text-2xl xl:line-clamp-3 dark:text-gray-100">
            {post.title}
          </h3>
          {link && (
            <a
              data-astro-prefetch
              href={link}
              class="text-blue-500 absolute bottom-2 right-5 sm:bottom-5 transition-transform duration-100 ease-linear hover:scale-110 z-10"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="w-12 h-12 inline-block fill-blue-300/40 dark:fill-blue-700/40"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="m12.75 15 3-3m0 0-3-3m3 3h-7.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
                />
              </svg>
            </a>
          )}
        </div>
      </div>
    ) : (
      <div
        class="absolute h-full w-full object-cover -z-10 rounded-lg bg-gray-400"
        style={blogCardMask}
      />
    )
  }
</div>
