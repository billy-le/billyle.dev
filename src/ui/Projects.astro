---
import Mound from "@ui/Mound.astro";

interface Props {
  className?: string;
}

import projectsData from "@data/projects.json";

const { className = "" } = Astro.props;
---

<section class="relative">
  <Mound className="w-full absolute bottom-[-1px]" />
</section>

<section id="projects" class={`relative ${className}`}>
  <div class="container h-full flex flex-col py-8">
    <h2 class="text-heading">Projects.</h2>
    <div class="grid gap-4 md:grid-cols-2 xl:grid-cols-3">
      {
        projectsData.map(({ name, description, link, sourceCode, tags }) => (
          <div class="w-full bg-slate-100 rounded-lg shadow p-8 flex flex-col gap-4">
            <div class="h-full space-y-3">
              <div class="flex justify-between">
                <h3 class="text-xl text-slate-800">{name}</h3>
                <a
                  href={link}
                  rel="noopener noreferrer"
                  target="_blank"
                  class="md:hidden"
                  aria-label={`Link to ${name} App`}
                >
                  <i class="fa-solid fa-link fa-lg text-blue-400" />
                </a>
              </div>
              <h4 class="hidden space-x-2 items-center md:flex">
                <i class="fa-solid fa-link fa-xs text-blue-400" />
                <a
                  href={link}
                  rel="noopener noreferrer"
                  target="_blank"
                  class="link-hover text-xs text-slate-500"
                >
                  {link}
                </a>
              </h4>
              <p class="text-sm text-slate-500">{description}</p>
            </div>
            <div>
              <ul class="space-y-1">
                {sourceCode.map(({ host, link }) => (
                  <li class="flex items-center space-x-2">
                    {host === "github" && (
                      <i class="fa-brands fa-square-github fa-lg text-slate-800" />
                    )}
                    <h4 class="leading-none">
                      <a
                        href={link}
                        rel="noopener noreferrer"
                        target="_blank"
                        class="link-hover text-xs text-slate-500"
                      >
                        {link}
                      </a>
                    </h4>
                  </li>
                ))}
              </ul>
            </div>
            <div class="flex flex-wrap gap-1">
              {tags.slice(0, 3).map((tag) => (
                <div class="bg-blue-500 bg-opacity-10 text-blue-500 text-xs rounded-full px-2 py-0.5 grid place-items-center">
                  {tag}
                </div>
              ))}
              {tags.slice(3).length > 0 && (
                <div class="group relative bg-blue-500 bg-opacity-10 text-blue-500 text-xs rounded-full px-2 py-0.5 grid place-items-center">
                  <span>+ {tags.slice(3).length}</span>
                  <ul class="hidden group-hover:block absolute left-full space-y-0.5 text-xs p-3 bg-slate-100 rounded shadow-md">
                    {tags.slice(3).map((tag) => (
                      <li>{tag}</li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>
