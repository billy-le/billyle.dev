---
import Mound from "@ui/components/Mound.astro";
import SvgGrain from "@ui/components/SvgGrain.astro";

interface Props {
  className?: string;
}

const projectsData = [
  {
    name: "Love, Edith",
    description:
      "I worked on an e-commerce website specializing in handmade women's clothing. The client emphasized the importance of simplicity, fast page speed, and cost-effectiveness. To meet these requirements, we opted for the JAMStack approach, using Next.js for the frontend, Strapi as the CMS, and deploying on Netlify and Heroku.",
    link: "https://loveedith.netlify.app/",
    images: [],
    sourceCode: [
      { link: "https://github.com/billy-le/love-edith", host: "github" },
      {
        link: "https://github.com/billy-le/love-edith-strapi",
        host: "github",
      },
    ],
    tags: [
      "react",
      "nextjs",
      "strapi",
      "heroku",
      "tailwind",
      "graphql",
      "apollo",
      "netlify",
    ],
  },
  {
    name: "Soil Life",
    description:
      "I developed an informational website aimed at educating the public about soil life, employing the JAMStack architecture. Initially, the project began as a monolithic stack with static pages served from an Express Node server using Embedded JavaScript Templates (ejs). Eventually, the final product transitioned to React, leveraging Google Sheets as the CMS.",
    link: "https://soillife.org",
    images: [],
    sourceCode: [
      { link: "https://github.com/SoilLife/soil-life-web", host: "github" },
    ],
    tags: ["react", "netlify", "tailwind"],
  },
  {
    name: "Converse",
    description:
      "Converse is a real-time web chat app utilizing WebRTC and Socket.io. It boasts features such as public chatrooms, live video and audio streaming, the ability to change input/output media devices, and invitation link sharing. I initiated this project with the primary goal of enhancing my knowledge in real-time web communications and protocols.",
    link: "https://converse.billyle.dev",
    images: [],
    sourceCode: [
      { link: "https://github.com/billy-le/converse", host: "github" },
    ],
    tags: ["node", "express", "liquidjs", "web-rtc", "socket.io"],
  },
  {
    name: "Eventlulu",
    description:
      "Eventlulu is an online event management platform for hotels. It features a dashboard with important metrics, creating proposals from leads, and an admin page to inventory products and services offered. I started this project to assist the daily operations of a hotel where majority of their sales pipeline is done by paper and hand.",
    link: "https://eventlulu.billyle.dev",
    images: [],
    sourceCode: [
      { link: "https://github.com/billy-le/eventlulu", host: "github" },
    ],
    tags: ["node", "trpc", "typescript", "tailwindcss", "react"],
  },
];

const { className = "" } = Astro.props;
---

<div class="w-full relative bottom-[-2px]">
  <Mound className="fill-slate-400 dark:fill-slate-900" />
</div>

<section id="projects" class={`relative ${className}`}>
  <div class="container h-full flex flex-col py-8">
    <h2 class="text-heading">Projects.</h2>
    <div class="grid gap-4 md:grid-cols-2 xl:grid-cols-3">
      {
        projectsData.map(({ name, description, link, sourceCode, tags }) => (
          <div
            class="relative w-full overflow-hidden bg-slate-100 rounded-lg shadow p-8 flex flex-col gap-4 border-2 border-slate-950/10
          dark:bg-slate-800"
          >
            <SvgGrain className="absolute top-0 left-0 h-full w-full opacity-15" />
            <div class="relative h-full space-y-3">
              <div class="flex justify-between">
                <h3 class="text-xl font-semibold text-slate-800 dark:text-emerald-300">
                  {name}
                </h3>
                <a
                  href={link}
                  rel="noopener noreferrer"
                  target="_blank"
                  class="h-6 w-6 md:hidden"
                  aria-label={`Link to ${name} App`}
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    class="stroke-blue-400 h-6 w-6"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="M13.19 8.688a4.5 4.5 0 0 1 1.242 7.244l-4.5 4.5a4.5 4.5 0 0 1-6.364-6.364l1.757-1.757m13.35-.622 1.757-1.757a4.5 4.5 0 0 0-6.364-6.364l-4.5 4.5a4.5 4.5 0 0 0 1.242 7.244"
                    />
                  </svg>
                </a>
              </div>
              <h4 class="hidden space-x-2 items-center md:flex">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="h-4 w-4 stroke-blue-400"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M13.19 8.688a4.5 4.5 0 0 1 1.242 7.244l-4.5 4.5a4.5 4.5 0 0 1-6.364-6.364l1.757-1.757m13.35-.622 1.757-1.757a4.5 4.5 0 0 0-6.364-6.364l-4.5 4.5a4.5 4.5 0 0 0 1.242 7.244"
                  />
                </svg>
                <a
                  href={link}
                  rel="noopener noreferrer"
                  target="_blank"
                  class="link-hover text-xs text-gray-500 dark:text-gray-200"
                >
                  {link}
                </a>
              </h4>
              <p class="text-sm text-gray-500 dark:text-gray-200">
                {description}
              </p>
            </div>
            <div>
              <ul class="space-y-1">
                {sourceCode.map(({ host, link }) => (
                  <li class="flex items-center space-x-2">
                    {host === "github" && (
                      <svg class="h-5 w-5" viewBox="0 0 128 128">
                        <g class="dark:fill-gray-600">
                          <path
                            fill-rule="evenodd"
                            clip-rule="evenodd"
                            d="M64 5.103c-33.347 0-60.388 27.035-60.388 60.388 0 26.682 17.303 49.317 41.297 57.303 3.017.56 4.125-1.31 4.125-2.905 0-1.44-.056-6.197-.082-11.243-16.8 3.653-20.345-7.125-20.345-7.125-2.747-6.98-6.705-8.836-6.705-8.836-5.48-3.748.413-3.67.413-3.67 6.063.425 9.257 6.223 9.257 6.223 5.386 9.23 14.127 6.562 17.573 5.02.542-3.903 2.107-6.568 3.834-8.076-13.413-1.525-27.514-6.704-27.514-29.843 0-6.593 2.36-11.98 6.223-16.21-.628-1.52-2.695-7.662.584-15.98 0 0 5.07-1.623 16.61 6.19C53.7 35 58.867 34.327 64 34.304c5.13.023 10.3.694 15.127 2.033 11.526-7.813 16.59-6.19 16.59-6.19 3.287 8.317 1.22 14.46.593 15.98 3.872 4.23 6.215 9.617 6.215 16.21 0 23.194-14.127 28.3-27.574 29.796 2.167 1.874 4.097 5.55 4.097 11.183 0 8.08-.07 14.583-.07 16.572 0 1.607 1.088 3.49 4.148 2.897 23.98-7.994 41.263-30.622 41.263-57.294C124.388 32.14 97.35 5.104 64 5.104z"
                          />
                          <path d="M26.484 91.806c-.133.3-.605.39-1.035.185-.44-.196-.685-.605-.543-.906.13-.31.603-.395 1.04-.188.44.197.69.61.537.91zm2.446 2.729c-.287.267-.85.143-1.232-.28-.396-.42-.47-.983-.177-1.254.298-.266.844-.14 1.24.28.394.426.472.984.17 1.255zM31.312 98.012c-.37.258-.976.017-1.35-.52-.37-.538-.37-1.183.01-1.44.373-.258.97-.025 1.35.507.368.545.368 1.19-.01 1.452zm3.261 3.361c-.33.365-1.036.267-1.552-.23-.527-.487-.674-1.18-.343-1.544.336-.366 1.045-.264 1.564.23.527.486.686 1.18.333 1.543zm4.5 1.951c-.147.473-.825.688-1.51.486-.683-.207-1.13-.76-.99-1.238.14-.477.823-.7 1.512-.485.683.206 1.13.756.988 1.237zm4.943.361c.017.498-.563.91-1.28.92-.723.017-1.308-.387-1.315-.877 0-.503.568-.91 1.29-.924.717-.013 1.306.387 1.306.88zm4.598-.782c.086.485-.413.984-1.126 1.117-.7.13-1.35-.172-1.44-.653-.086-.498.422-.997 1.122-1.126.714-.123 1.354.17 1.444.663zm0 0" />
                        </g>
                      </svg>
                    )}
                    <h4 class="leading-none">
                      <a
                        href={link}
                        rel="noopener noreferrer"
                        target="_blank"
                        class="link-hover text-xs text-gray-500 dark:text-gray-200"
                      >
                        {link}
                      </a>
                    </h4>
                  </li>
                ))}
              </ul>
            </div>
            <div class="flex flex-wrap gap-2">
              {tags.slice(0, 3).map((tag) => (
                <div class="bg-blue-500 bg-opacity-10 text-blue-500 text-xs font-medium rounded-full px-2 py-0.5 grid place-items-center dark:bg-blue-600 dark:bg-opacity-20 dark:text-blue-300">
                  {tag}
                </div>
              ))}
              {tags.slice(3).length > 0 && (
                <div class="group relative bg-blue-500 bg-opacity-10 text-blue-500 text-xs font-medium rounded-full px-2 py-0.5 grid place-items-center dark:bg-blue-600 dark:bg-opacity-20 dark:text-blue-300">
                  <span>+ {tags.slice(3).length}</span>
                  <ul class="hidden ml-2 group-hover:block absolute left-full space-y-0.5 text-xs p-3 bg-slate-100 rounded shadow-md dark:bg-slate-700">
                    {tags.slice(3).map((tag) => (
                      <li>{tag}</li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>
