---
interface Props {
  className?: string;
}

// assets
import amtrak from "src/assets/images/amtrak.jpg";
import bridge from "src/assets/images/bridge.jpg";
import capitolInterior from "src/assets/images/capitol-interior.jpg";
import coffee from "src/assets/images/coffee.jpg";
import meetup from "src/assets/images/meetup.jpg";
import sunflowers from "src/assets/images/sunflowers.jpg";
import towerRecords from "src/assets/images/tower-records.jpg";

// components
import { Image } from "@astrojs/image/components";

// data
import workExpJson from "src/data/experience.json";

const workExpImages = [
  amtrak,
  bridge,
  capitolInterior,
  coffee,
  meetup,
  sunflowers,
  towerRecords,
] as unknown as ImageMetadata[];
const workExp: (Omit<typeof workExpJson[0], "image"> & {
  image: ImageMetadata;
})[] = [];
for (const exp of workExpJson) {
  workExp.push({
    ...exp,
    image: workExpImages.find((image) =>
      image.src.includes(exp.image)
    ) as ImageMetadata,
  });
}

const { className = "" } = Astro.props;
---

<section id="work" class={`relative py-8  ${className}`}>
  <h2 class="text-heading container">Work.</h2>
  <div class="flex flex-col isolate max-w-screen-2xl mx-auto md:flex-row">
    {
      workExp.map((exp) => (
        <div class="relative h-full group overflow-hidden basis-[20%] hover:basis-[40%] transition-['width'] duration-500">
          <div class="after:content-[''] after:block after:absolute after:top-0 after:left-0 after:h-full after:w-full after:bg-gradient-to-tr after:from-blue-900 after:to-slate-800 after:opacity-50 after:z-[1] group-hover:after:to-transparent group-hover:after:from-transparent group-focus:after:to-transparent group-focus:after:from-transparent">
            <Image
              src={exp.image}
              width={600}
              height={800}
              format="jpeg"
              class="h-[400px] xl:h-[600px] blur-[0.5px] object-cover bg-center grayscale group-hover:filter-none transition-['filter'] duration-500"
              alt={exp.imageAlt}
            />
          </div>
          <h3 class="absolute top-1/2 xl:top-3/4 left-1/2 transform -translate-x-1/2 translate-y-1/2 text-white whitespace-nowrap font-['Vidaloka'] z-10 group-hover:top-[10%] xl:group-hover:top-[40%] transition-['transform'] duration-500 py-3 border-t border-b border-solid border-slate-100 min-w-[60px] text-center">
            {exp.startYear === exp.endYear
              ? exp.startYear
              : `${exp.startYear} - ${exp.endYear || "Present"}`}
          </h3>
          <div class="h-full w-full absolute translate-y-full top-0 left-0 transition-['transform'] duration-500 group-hover:translate-y-0 before:content-[''] before:block before:absolute before:h-full before:w-full before:bg-gradient-to-t before:from-black">
            <h4 class="text-center relative top-1/2 xl:top-2/3 text-green-500 text-xl uppercase tracking-widest">
              {exp.name}
            </h4>
            <p class="text-center relative top-1/2 xl:top-2/3 text-sm p-4 text-slate-100 opacity-0 group-hover:opacity-100 transition-all duration-1000">
              {exp.description}
            </p>
          </div>
        </div>
      ))
    }
  </div>
</section>
<style>
  h4 {
    font-size: clamp(1.15rem, 1vw, 2.5rem);
  }
</style>
